
==> Audit <==
|---------|---------|---------|---------|---------|---------------------|----------|
| Command |  Args   | Profile |  User   | Version |     Start Time      | End Time |
|---------|---------|---------|---------|---------|---------------------|----------|
| start   | -p demo | demo    | zleetch | v1.34.0 | 09 Nov 24 14:25 WIB |          |
|---------|---------|---------|---------|---------|---------------------|----------|


==> Last Start <==
Log file created at: 2024/11/09 14:25:43
Running on machine: LAPTOP-FE31S7HF
Binary: Built with gc go1.22.5 for linux/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I1109 14:25:43.342006    2296 out.go:345] Setting OutFile to fd 1 ...
I1109 14:25:43.342752    2296 out.go:358] Setting ErrFile to fd 2...
I1109 14:25:43.342883    2296 root.go:338] Updating PATH: /home/zleetch/.minikube/bin
W1109 14:25:43.343193    2296 root.go:314] Error reading config file at /home/zleetch/.minikube/config/config.json: open /home/zleetch/.minikube/config/config.json: no such file or directory
I1109 14:25:43.345637    2296 out.go:352] Setting JSON to false
I1109 14:25:43.347269    2296 start.go:129] hostinfo: {"hostname":"LAPTOP-FE31S7HF","uptime":3258,"bootTime":1731133885,"procs":35,"os":"linux","platform":"ubuntu","platformFamily":"debian","platformVersion":"24.04","kernelVersion":"5.15.153.1-microsoft-standard-WSL2","kernelArch":"x86_64","virtualizationSystem":"","virtualizationRole":"guest","hostId":"3edab058-df86-404d-8616-ba2fab0b307d"}
I1109 14:25:43.347307    2296 start.go:139] virtualization:  guest
I1109 14:25:43.352318    2296 out.go:177] 😄  [demo] minikube v1.34.0 on Ubuntu 24.04 (amd64)
W1109 14:25:43.357546    2296 preload.go:293] Failed to list preload files: open /home/zleetch/.minikube/cache/preloaded-tarball: no such file or directory
I1109 14:25:43.358625    2296 notify.go:220] Checking for updates...
I1109 14:25:43.358653    2296 driver.go:394] Setting default libvirt URI to qemu:///system
I1109 14:25:43.359066    2296 global.go:112] Querying for installed drivers using PATH=/home/zleetch/.minikube/bin:/home/zleetch/.asdf/installs/minikube/1.34.0/bin:/home/zleetch/.local/bin:/home/zleetch/.asdf/shims:/home/zleetch/.asdf/bin:/home/zleetch/.config/envman/PATH.env:/home/zleetch/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files (x86)/Razer Chroma SDK/bin:/mnt/c/Program Files/Razer Chroma SDK/bin:/mnt/c/Program Files (x86)/Razer/ChromaBroadcast/bin:/mnt/c/Program Files/Razer/ChromaBroadcast/bin:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Windows/system32/config/systemprofile/AppData/Local/Microsoft/WindowsApps:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Program Files/Docker/Docker/resources/bin:/mnt/c/Users/Bimo Amarullah/.local/bin:/mnt/c/Users/Bimo Amarullah/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/Bimo Amarullah/AppData/Local/spicetify:/mnt/c/Users/Bimo Amarullah/AppData/Local/Programs/Microsoft VS Code/bin:/home/zleetch/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/asdf:/home/zleetch/.antigen/bundles/unixorn/fzf-zsh-plugin-main:/home/zleetch/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found:/home/zleetch/.antigen/bundles/zsh-users/zsh-autosuggestions:/home/zleetch/.antigen/bundles/zsh-users/zsh-completions:/home/zleetch/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/home/zleetch/.antigen/bundles/joshskidmore/zsh-fzf-history-search:/home/zleetch/.antigen/bundles/adolfoabegg/browse-commit:/home/zleetch/.antigen/bundles/MenkeTechnologies/zsh-git-acp:/home/zleetch/.antigen/bundles/Freed-Wu/zsh-help-main:/home/zleetch/.antigen/bundles/joepvd/zsh-hints:/home/zleetch/.antigen/bundles/reegnz/jq-zsh-plugin:/home/zleetch/.antigen/bundles/yzdann/kctl-main:/home/zleetch/.antigen/bundles/jonmosco/kube-ps1:/home/zleetch/.antigen/bundles/mattmc3/zsh-safe-rm:/home/zleetch/.antigen/bundles/enrico9034/zsh-watch-plugin-main:/home/zleetch/.antigen/bundles/vladmyr/dotfiles-plugin:/home/zleetch/.antigen/bundles/unixorn/fzf-zsh-plugin-main/bin:/home/zleetch/.fzf/bin:/home/zleetch/.antigen/bundles/reegnz/jq-zsh-plugin/bin
I1109 14:25:43.621353    2296 docker.go:123] docker version: linux-26.1.1:Docker Desktop
I1109 14:25:43.621639    2296 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I1109 14:25:44.535793    2296 info.go:266] docker info: {ID:99e19b87-8861-477f-b2f2-b93f5bde5de1 Containers:1 ContainersRunning:0 ContainersPaused:0 ContainersStopped:1 Images:23 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:47 OomKillDisable:true NGoroutines:67 SystemTime:2024-11-09 07:25:44.516053517 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:12 KernelVersion:5.15.153.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:16 MemTotal:33231818752 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[com.docker.desktop.address=unix:///var/run/docker-cli.sock] ExperimentalBuild:false ServerVersion:26.1.1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:e377cd56a71523140ca6ae87e30244719194a521 Expected:e377cd56a71523140ca6ae87e30244719194a521} RuncCommit:{ID:v1.1.12-0-g51d5e94 Expected:v1.1.12-0-g51d5e94} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/local/lib/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.14.0-desktop.1] map[Name:compose Path:/usr/local/lib/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.27.0-desktop.2] map[Name:debug Path:/usr/local/lib/docker/cli-plugins/docker-debug SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container Vendor:Docker Inc. Version:0.0.29] map[Name:dev Path:/usr/local/lib/docker/cli-plugins/docker-dev SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.2] map[Name:extension Path:/usr/local/lib/docker/cli-plugins/docker-extension SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.23] map[Name:feedback Path:/usr/local/lib/docker/cli-plugins/docker-feedback SchemaVersion:0.1.0 ShortDescription:Provide feedback, right in your terminal! Vendor:Docker Inc. Version:v1.0.4] map[Name:init Path:/usr/local/lib/docker/cli-plugins/docker-init SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.1.0] map[Name:sbom Path:/usr/local/lib/docker/cli-plugins/docker-sbom SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scout Path:/usr/local/lib/docker/cli-plugins/docker-scout SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.8.0]] Warnings:<nil>}}
I1109 14:25:44.535900    2296 docker.go:318] overlay module found
I1109 14:25:44.535948    2296 global.go:133] docker default: true priority: 9, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I1109 14:25:44.572957    2296 global.go:133] none default: false priority: 4, state: {Installed:false Healthy:false Running:true NeedsImprovement:false Error:exec: "iptables": executable file not found in $PATH Reason: Fix:iptables must be installed Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/none/ Version:}
I1109 14:25:44.609072    2296 global.go:133] podman default: true priority: 7, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "podman": executable file not found in $PATH Reason: Fix:Install Podman Doc:https://minikube.sigs.k8s.io/docs/drivers/podman/ Version:}
I1109 14:25:44.609156    2296 global.go:133] ssh default: false priority: 4, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I1109 14:25:44.644944    2296 global.go:133] kvm2 default: true priority: 8, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "virsh": executable file not found in $PATH Reason: Fix:Install libvirt Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/kvm2/ Version:}
I1109 14:25:44.680761    2296 global.go:133] qemu2 default: true priority: 7, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "qemu-system-x86_64": executable file not found in $PATH Reason: Fix:Install qemu-system Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/qemu/ Version:}
I1109 14:25:44.758374    2296 global.go:133] virtualbox default: true priority: 6, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:unable to find VBoxManage in $PATH Reason: Fix:Install VirtualBox Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/virtualbox/ Version:}
I1109 14:25:44.799456    2296 global.go:133] vmware default: false priority: 5, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "vmrun": executable file not found in $PATH Reason: Fix:Install vmrun Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/vmware/ Version:}
I1109 14:25:44.799501    2296 driver.go:316] not recommending "ssh" due to default: false
I1109 14:25:44.799516    2296 driver.go:351] Picked: docker
I1109 14:25:44.799523    2296 driver.go:352] Alternatives: [ssh]
I1109 14:25:44.799528    2296 driver.go:353] Rejects: [none podman kvm2 qemu2 virtualbox vmware]
I1109 14:25:44.819127    2296 out.go:177] ✨  Automatically selected the docker driver
I1109 14:25:44.824013    2296 start.go:297] selected driver: docker
I1109 14:25:44.824025    2296 start.go:901] validating driver "docker" against <nil>
I1109 14:25:44.824038    2296 start.go:912] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I1109 14:25:44.824164    2296 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I1109 14:25:44.948978    2296 info.go:266] docker info: {ID:99e19b87-8861-477f-b2f2-b93f5bde5de1 Containers:1 ContainersRunning:0 ContainersPaused:0 ContainersStopped:1 Images:23 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:47 OomKillDisable:true NGoroutines:67 SystemTime:2024-11-09 07:25:44.935657914 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:12 KernelVersion:5.15.153.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:16 MemTotal:33231818752 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[com.docker.desktop.address=unix:///var/run/docker-cli.sock] ExperimentalBuild:false ServerVersion:26.1.1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:e377cd56a71523140ca6ae87e30244719194a521 Expected:e377cd56a71523140ca6ae87e30244719194a521} RuncCommit:{ID:v1.1.12-0-g51d5e94 Expected:v1.1.12-0-g51d5e94} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/local/lib/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.14.0-desktop.1] map[Name:compose Path:/usr/local/lib/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.27.0-desktop.2] map[Name:debug Path:/usr/local/lib/docker/cli-plugins/docker-debug SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container Vendor:Docker Inc. Version:0.0.29] map[Name:dev Path:/usr/local/lib/docker/cli-plugins/docker-dev SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.2] map[Name:extension Path:/usr/local/lib/docker/cli-plugins/docker-extension SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.23] map[Name:feedback Path:/usr/local/lib/docker/cli-plugins/docker-feedback SchemaVersion:0.1.0 ShortDescription:Provide feedback, right in your terminal! Vendor:Docker Inc. Version:v1.0.4] map[Name:init Path:/usr/local/lib/docker/cli-plugins/docker-init SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.1.0] map[Name:sbom Path:/usr/local/lib/docker/cli-plugins/docker-sbom SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scout Path:/usr/local/lib/docker/cli-plugins/docker-scout SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.8.0]] Warnings:<nil>}}
I1109 14:25:44.949103    2296 start_flags.go:310] no existing cluster config was found, will generate one from the flags 
I1109 14:25:44.950826    2296 start_flags.go:393] Using suggested 7900MB memory alloc based on sys=31692MB, container=31692MB
I1109 14:25:44.951185    2296 start_flags.go:929] Wait components to verify : map[apiserver:true system_pods:true]
I1109 14:25:44.955990    2296 out.go:177] 📌  Using Docker driver with root privileges
W1109 14:25:44.960808    2296 out.go:270] ❗  For an improved experience it's recommended to use Docker Engine instead of Docker Desktop.
Docker Engine installation instructions: https://docs.docker.com/engine/install/#server
I1109 14:25:44.960910    2296 cni.go:84] Creating CNI manager for ""
I1109 14:25:44.960922    2296 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I1109 14:25:44.960930    2296 start_flags.go:319] Found "bridge CNI" CNI - setting NetworkPlugin=cni
I1109 14:25:44.960988    2296 start.go:340] cluster config:
{Name:demo KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 Memory:7900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.31.0 ClusterName:demo Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.31.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/zleetch:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I1109 14:25:44.970250    2296 out.go:177] 👍  Starting "demo" primary control-plane node in "demo" cluster
I1109 14:25:44.975265    2296 cache.go:121] Beginning downloading kic base image for docker with docker
I1109 14:25:44.980198    2296 out.go:177] 🚜  Pulling base image v0.0.45 ...
I1109 14:25:44.984931    2296 preload.go:131] Checking if preload exists for k8s version v1.31.0 and runtime docker
I1109 14:25:44.985051    2296 image.go:79] Checking for gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 in local docker daemon
I1109 14:25:45.049485    2296 cache.go:149] Downloading gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 to local cache
I1109 14:25:45.050706    2296 image.go:63] Checking for gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 in local cache directory
I1109 14:25:45.051314    2296 image.go:148] Writing gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 to local cache
I1109 14:25:45.266235    2296 preload.go:118] Found remote preload: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.31.0/preloaded-images-k8s-v18-v1.31.0-docker-overlay2-amd64.tar.lz4
I1109 14:25:45.266252    2296 cache.go:56] Caching tarball of preloaded images
I1109 14:25:45.266553    2296 preload.go:131] Checking if preload exists for k8s version v1.31.0 and runtime docker
I1109 14:25:45.272523    2296 out.go:177] 💾  Downloading Kubernetes v1.31.0 preload ...
I1109 14:25:45.277929    2296 preload.go:236] getting checksum for preloaded-images-k8s-v18-v1.31.0-docker-overlay2-amd64.tar.lz4 ...
I1109 14:25:45.661573    2296 download.go:107] Downloading: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.31.0/preloaded-images-k8s-v18-v1.31.0-docker-overlay2-amd64.tar.lz4?checksum=md5:2dd98f97b896d7a4f012ee403b477cc8 -> /home/zleetch/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.31.0-docker-overlay2-amd64.tar.lz4
I1109 14:28:01.389187    2296 cache.go:152] successfully saved gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 as a tarball
I1109 14:28:01.389201    2296 cache.go:162] Loading gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 from local cache
I1109 14:28:07.755479    2296 preload.go:247] saving checksum for preloaded-images-k8s-v18-v1.31.0-docker-overlay2-amd64.tar.lz4 ...
I1109 14:28:07.755753    2296 preload.go:254] verifying checksum of /home/zleetch/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.31.0-docker-overlay2-amd64.tar.lz4 ...
I1109 14:28:08.235367    2296 cache.go:59] Finished verifying existence of preloaded tar for v1.31.0 on docker
I1109 14:28:08.235563    2296 profile.go:143] Saving config to /home/zleetch/.minikube/profiles/demo/config.json ...
I1109 14:28:08.235577    2296 lock.go:35] WriteFile acquiring /home/zleetch/.minikube/profiles/demo/config.json: {Name:mk919017457fb1c3b339b5d12cfa2ffa9073f91b Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1109 14:28:14.656381    2296 cache.go:164] successfully loaded and using gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 from cached tarball
I1109 14:28:14.656424    2296 cache.go:194] Successfully downloaded all kic artifacts
I1109 14:28:14.656448    2296 start.go:360] acquireMachinesLock for demo: {Name:mkf2fda2da51bff06cbdab8c48787899ef7a2010 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I1109 14:28:14.656557    2296 start.go:364] duration metric: took 97.036µs to acquireMachinesLock for "demo"
I1109 14:28:14.656574    2296 start.go:93] Provisioning new machine with config: &{Name:demo KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 Memory:7900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.31.0 ClusterName:demo Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.31.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/zleetch:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} &{Name: IP: Port:8443 KubernetesVersion:v1.31.0 ContainerRuntime:docker ControlPlane:true Worker:true}
I1109 14:28:14.656617    2296 start.go:125] createHost starting for "" (driver="docker")
I1109 14:28:14.673524    2296 out.go:235] 🔥  Creating docker container (CPUs=2, Memory=7900MB) ...
I1109 14:28:14.673933    2296 start.go:159] libmachine.API.Create for "demo" (driver="docker")
I1109 14:28:14.673973    2296 client.go:168] LocalClient.Create starting
I1109 14:28:14.674104    2296 main.go:141] libmachine: Creating CA: /home/zleetch/.minikube/certs/ca.pem
I1109 14:28:14.890463    2296 main.go:141] libmachine: Creating client certificate: /home/zleetch/.minikube/certs/cert.pem
I1109 14:28:14.938532    2296 cli_runner.go:164] Run: docker network inspect demo --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I1109 14:28:15.005472    2296 network_create.go:77] Found existing network {name:demo subnet:0xc0007601e0 gateway:[0 0 0 0 0 0 0 0 0 0 255 255 192 168 49 1] mtu:1500}
I1109 14:28:15.005494    2296 kic.go:121] calculated static IP "192.168.49.2" for the "demo" container
I1109 14:28:15.005560    2296 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I1109 14:28:15.058167    2296 cli_runner.go:164] Run: docker container inspect demo --format {{.Config.Labels}}
I1109 14:28:15.119690    2296 kic.go:169] Found already existing abandoned minikube container, will try to delete.
I1109 14:28:15.119747    2296 cli_runner.go:164] Run: docker container inspect demo --format={{.State.Status}}
I1109 14:28:15.173674    2296 cli_runner.go:164] Run: docker exec --privileged -t demo /bin/bash -c "sudo init 0"
W1109 14:28:15.234837    2296 cli_runner.go:211] docker exec --privileged -t demo /bin/bash -c "sudo init 0" returned with exit code 1
I1109 14:28:15.234855    2296 oci.go:650] error shutdown demo: docker exec --privileged -t demo /bin/bash -c "sudo init 0": exit status 1
stdout:

stderr:
Error response from daemon: container f71005fd5995b0983800fd32e4c308b80b25580ea91c508a260cd42deb0eff0f is not running
I1109 14:28:16.235903    2296 cli_runner.go:164] Run: docker container inspect demo --format={{.State.Status}}
I1109 14:28:16.304507    2296 oci.go:658] container demo status is Stopped
I1109 14:28:16.304535    2296 oci.go:670] Successfully shutdown container demo
I1109 14:28:16.304582    2296 cli_runner.go:164] Run: docker rm -f -v demo
I1109 14:28:16.431156    2296 cli_runner.go:164] Run: docker volume create demo --label name.minikube.sigs.k8s.io=demo --label created_by.minikube.sigs.k8s.io=true
I1109 14:28:16.483706    2296 oci.go:103] Successfully created a docker volume demo
I1109 14:28:16.483771    2296 cli_runner.go:164] Run: docker run --rm --name demo-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=demo --entrypoint /usr/bin/test -v demo:/var gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 -d /var/lib
I1109 14:28:20.138482    2296 cli_runner.go:217] Completed: docker run --rm --name demo-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=demo --entrypoint /usr/bin/test -v demo:/var gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 -d /var/lib: (3.654685333s)
I1109 14:28:20.138497    2296 oci.go:107] Successfully prepared a docker volume demo
I1109 14:28:20.138538    2296 preload.go:131] Checking if preload exists for k8s version v1.31.0 and runtime docker
I1109 14:28:20.138555    2296 kic.go:194] Starting extracting preloaded images to volume ...
I1109 14:28:20.138613    2296 cli_runner.go:164] Run: docker run --rm --entrypoint /usr/bin/tar -v /home/zleetch/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.31.0-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v demo:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 -I lz4 -xf /preloaded.tar -C /extractDir
I1109 14:28:25.036855    2296 cli_runner.go:217] Completed: docker run --rm --entrypoint /usr/bin/tar -v /home/zleetch/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.31.0-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v demo:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 -I lz4 -xf /preloaded.tar -C /extractDir: (4.898210724s)
I1109 14:28:25.036875    2296 kic.go:203] duration metric: took 4.898317022s to extract preloaded images to volume ...
W1109 14:28:25.037364    2296 cgroups_linux.go:77] Your kernel does not support swap limit capabilities or the cgroup is not mounted.
I1109 14:28:25.037483    2296 cli_runner.go:164] Run: docker info --format "'{{json .SecurityOptions}}'"
I1109 14:28:25.164751    2296 cli_runner.go:164] Run: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname demo --name demo --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=demo --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=demo --network demo --ip 192.168.49.2 --volume demo:/var --security-opt apparmor=unconfined --memory=7900mb --cpus=2 -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85
I1109 14:28:25.942210    2296 cli_runner.go:164] Run: docker container inspect demo --format={{.State.Running}}
I1109 14:28:26.037198    2296 cli_runner.go:164] Run: docker container inspect demo --format={{.State.Status}}
I1109 14:28:26.123899    2296 cli_runner.go:164] Run: docker exec demo stat /var/lib/dpkg/alternatives/iptables
I1109 14:28:26.266454    2296 oci.go:144] the created container "demo" has a running status.
I1109 14:28:26.266471    2296 kic.go:225] Creating ssh key for kic: /home/zleetch/.minikube/machines/demo/id_rsa...
I1109 14:28:26.352923    2296 kic_runner.go:191] docker (temp): /home/zleetch/.minikube/machines/demo/id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I1109 14:28:26.449500    2296 cli_runner.go:164] Run: docker container inspect demo --format={{.State.Status}}
I1109 14:28:26.530727    2296 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I1109 14:28:26.530739    2296 kic_runner.go:114] Args: [docker exec --privileged demo chown docker:docker /home/docker/.ssh/authorized_keys]
I1109 14:28:26.683011    2296 cli_runner.go:164] Run: docker container inspect demo --format={{.State.Status}}
I1109 14:28:26.763920    2296 machine.go:93] provisionDockerMachine start ...
I1109 14:28:26.764013    2296 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" demo
I1109 14:28:26.835139    2296 main.go:141] libmachine: Using SSH client type: native
I1109 14:28:26.835356    2296 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82f9c0] 0x832720 <nil>  [] 0s} 127.0.0.1 58097 <nil> <nil>}
I1109 14:28:26.835366    2296 main.go:141] libmachine: About to run SSH command:
hostname
I1109 14:28:26.963200    2296 main.go:141] libmachine: SSH cmd err, output: <nil>: demo

I1109 14:28:26.963215    2296 ubuntu.go:169] provisioning hostname "demo"
I1109 14:28:26.963305    2296 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" demo
I1109 14:28:27.045823    2296 main.go:141] libmachine: Using SSH client type: native
I1109 14:28:27.045970    2296 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82f9c0] 0x832720 <nil>  [] 0s} 127.0.0.1 58097 <nil> <nil>}
I1109 14:28:27.045977    2296 main.go:141] libmachine: About to run SSH command:
sudo hostname demo && echo "demo" | sudo tee /etc/hostname
I1109 14:28:27.197836    2296 main.go:141] libmachine: SSH cmd err, output: <nil>: demo

I1109 14:28:27.197933    2296 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" demo
I1109 14:28:27.293657    2296 main.go:141] libmachine: Using SSH client type: native
I1109 14:28:27.293778    2296 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82f9c0] 0x832720 <nil>  [] 0s} 127.0.0.1 58097 <nil> <nil>}
I1109 14:28:27.293788    2296 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sdemo' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 demo/g' /etc/hosts;
			else 
				echo '127.0.1.1 demo' | sudo tee -a /etc/hosts; 
			fi
		fi
I1109 14:28:27.424104    2296 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I1109 14:28:27.424132    2296 ubuntu.go:175] set auth options {CertDir:/home/zleetch/.minikube CaCertPath:/home/zleetch/.minikube/certs/ca.pem CaPrivateKeyPath:/home/zleetch/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/home/zleetch/.minikube/machines/server.pem ServerKeyPath:/home/zleetch/.minikube/machines/server-key.pem ClientKeyPath:/home/zleetch/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/home/zleetch/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/home/zleetch/.minikube}
I1109 14:28:27.424150    2296 ubuntu.go:177] setting up certificates
I1109 14:28:27.424160    2296 provision.go:84] configureAuth start
I1109 14:28:27.424226    2296 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" demo
I1109 14:28:27.481476    2296 provision.go:143] copyHostCerts
I1109 14:28:27.481521    2296 exec_runner.go:151] cp: /home/zleetch/.minikube/certs/ca.pem --> /home/zleetch/.minikube/ca.pem (1078 bytes)
I1109 14:28:27.481599    2296 exec_runner.go:151] cp: /home/zleetch/.minikube/certs/cert.pem --> /home/zleetch/.minikube/cert.pem (1123 bytes)
I1109 14:28:27.481664    2296 exec_runner.go:151] cp: /home/zleetch/.minikube/certs/key.pem --> /home/zleetch/.minikube/key.pem (1675 bytes)
I1109 14:28:27.481704    2296 provision.go:117] generating server cert: /home/zleetch/.minikube/machines/server.pem ca-key=/home/zleetch/.minikube/certs/ca.pem private-key=/home/zleetch/.minikube/certs/ca-key.pem org=zleetch.demo san=[127.0.0.1 192.168.49.2 demo localhost minikube]
I1109 14:28:27.526980    2296 provision.go:177] copyRemoteCerts
I1109 14:28:27.527050    2296 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I1109 14:28:27.527087    2296 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" demo
I1109 14:28:27.585183    2296 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:58097 SSHKeyPath:/home/zleetch/.minikube/machines/demo/id_rsa Username:docker}
I1109 14:28:27.677422    2296 ssh_runner.go:362] scp /home/zleetch/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1675 bytes)
I1109 14:28:27.698918    2296 ssh_runner.go:362] scp /home/zleetch/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1078 bytes)
I1109 14:28:27.719556    2296 ssh_runner.go:362] scp /home/zleetch/.minikube/machines/server.pem --> /etc/docker/server.pem (1184 bytes)
I1109 14:28:27.739984    2296 provision.go:87] duration metric: took 315.813183ms to configureAuth
I1109 14:28:27.739998    2296 ubuntu.go:193] setting minikube options for container-runtime
I1109 14:28:27.740141    2296 config.go:182] Loaded profile config "demo": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.31.0
I1109 14:28:27.740201    2296 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" demo
I1109 14:28:27.799568    2296 main.go:141] libmachine: Using SSH client type: native
I1109 14:28:27.799753    2296 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82f9c0] 0x832720 <nil>  [] 0s} 127.0.0.1 58097 <nil> <nil>}
I1109 14:28:27.799760    2296 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I1109 14:28:27.924356    2296 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I1109 14:28:27.924364    2296 ubuntu.go:71] root file system type: overlay
I1109 14:28:27.924429    2296 provision.go:314] Updating docker unit: /lib/systemd/system/docker.service ...
I1109 14:28:27.924480    2296 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" demo
I1109 14:28:27.985243    2296 main.go:141] libmachine: Using SSH client type: native
I1109 14:28:27.985351    2296 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82f9c0] 0x832720 <nil>  [] 0s} 127.0.0.1 58097 <nil> <nil>}
I1109 14:28:27.985388    2296 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %s "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I1109 14:28:27.641569    2296 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I1109 14:28:27.641632    2296 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" demo
I1109 14:28:27.693331    2296 main.go:141] libmachine: Using SSH client type: native
I1109 14:28:27.693438    2296 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82f9c0] 0x832720 <nil>  [] 0s} 127.0.0.1 58097 <nil> <nil>}
I1109 14:28:27.693446    2296 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I1109 14:28:27.813446    2296 main.go:141] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2024-08-27 14:13:43.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2024-11-09 07:28:27.630656378 +0000
@@ -1,46 +1,49 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
-After=network-online.target docker.socket firewalld.service containerd.service time-set.target
-Wants=network-online.target containerd.service
+BindsTo=containerd.service
+After=network-online.target firewalld.service containerd.service
+Wants=network-online.target
 Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutStartSec=0
-RestartSec=2
-Restart=always
+Restart=on-failure
 
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
+LimitNOFILE=infinity
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I1109 14:28:27.813458    2296 machine.go:96] duration metric: took 2.257093543s to provisionDockerMachine
I1109 14:28:27.813464    2296 client.go:171] duration metric: took 14.347051944s to LocalClient.Create
I1109 14:28:27.813492    2296 start.go:167] duration metric: took 14.347124899s to libmachine.API.Create "demo"
I1109 14:28:27.813497    2296 start.go:293] postStartSetup for "demo" (driver="docker")
I1109 14:28:27.813503    2296 start.go:322] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I1109 14:28:27.813547    2296 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I1109 14:28:27.813583    2296 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" demo
I1109 14:28:27.866045    2296 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:58097 SSHKeyPath:/home/zleetch/.minikube/machines/demo/id_rsa Username:docker}
I1109 14:28:27.962035    2296 ssh_runner.go:195] Run: cat /etc/os-release
I1109 14:28:27.965668    2296 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I1109 14:28:27.965690    2296 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I1109 14:28:27.965698    2296 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I1109 14:28:27.965704    2296 info.go:137] Remote host: Ubuntu 22.04.4 LTS
I1109 14:28:27.965713    2296 filesync.go:126] Scanning /home/zleetch/.minikube/addons for local assets ...
I1109 14:28:27.965770    2296 filesync.go:126] Scanning /home/zleetch/.minikube/files for local assets ...
I1109 14:28:27.965795    2296 start.go:296] duration metric: took 152.293328ms for postStartSetup
I1109 14:28:27.966101    2296 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" demo
I1109 14:28:28.041161    2296 profile.go:143] Saving config to /home/zleetch/.minikube/profiles/demo/config.json ...
I1109 14:28:28.041422    2296 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I1109 14:28:28.041466    2296 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" demo
I1109 14:28:28.099104    2296 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:58097 SSHKeyPath:/home/zleetch/.minikube/machines/demo/id_rsa Username:docker}
I1109 14:28:28.198341    2296 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I1109 14:28:28.203585    2296 start.go:128] duration metric: took 14.754522792s to createHost
I1109 14:28:28.203600    2296 start.go:83] releasing machines lock for "demo", held for 14.754598655s
I1109 14:28:28.203674    2296 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" demo
I1109 14:28:28.278525    2296 ssh_runner.go:195] Run: cat /version.json
I1109 14:28:28.278587    2296 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" demo
I1109 14:28:28.278661    2296 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I1109 14:28:28.278704    2296 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" demo
I1109 14:28:28.336214    2296 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:58097 SSHKeyPath:/home/zleetch/.minikube/machines/demo/id_rsa Username:docker}
I1109 14:28:28.344689    2296 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:58097 SSHKeyPath:/home/zleetch/.minikube/machines/demo/id_rsa Username:docker}
I1109 14:28:28.426867    2296 ssh_runner.go:195] Run: systemctl --version
I1109 14:28:28.851494    2296 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I1109 14:28:28.856926    2296 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
I1109 14:28:28.881889    2296 cni.go:230] loopback cni configuration patched: "/etc/cni/net.d/*loopback.conf*" found
I1109 14:28:28.881973    2296 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%p, " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I1109 14:28:28.909365    2296 cni.go:262] disabled [/etc/cni/net.d/87-podman-bridge.conflist, /etc/cni/net.d/100-crio-bridge.conf] bridge cni config(s)
I1109 14:28:28.909378    2296 start.go:495] detecting cgroup driver to use...
I1109 14:28:28.909406    2296 detect.go:187] detected "cgroupfs" cgroup driver on host os
I1109 14:28:28.909735    2296 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I1109 14:28:28.926691    2296 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.10"|' /etc/containerd/config.toml"
I1109 14:28:28.937131    2296 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I1109 14:28:28.947960    2296 containerd.go:146] configuring containerd to use "cgroupfs" as cgroup driver...
I1109 14:28:28.948021    2296 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I1109 14:28:28.957701    2296 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I1109 14:28:28.967904    2296 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I1109 14:28:28.978995    2296 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I1109 14:28:28.989039    2296 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I1109 14:28:28.997808    2296 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I1109 14:28:29.007578    2296 ssh_runner.go:195] Run: sh -c "sudo sed -i '/^ *enable_unprivileged_ports = .*/d' /etc/containerd/config.toml"
I1109 14:28:29.017839    2296 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)\[plugins."io.containerd.grpc.v1.cri"\]|&\n\1  enable_unprivileged_ports = true|' /etc/containerd/config.toml"
I1109 14:28:29.028185    2296 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I1109 14:28:29.036605    2296 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I1109 14:28:29.045733    2296 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1109 14:28:29.142734    2296 ssh_runner.go:195] Run: sudo systemctl restart containerd
I1109 14:28:29.237734    2296 start.go:495] detecting cgroup driver to use...
I1109 14:28:29.237768    2296 detect.go:187] detected "cgroupfs" cgroup driver on host os
I1109 14:28:29.237829    2296 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I1109 14:28:29.250338    2296 cruntime.go:279] skipping containerd shutdown because we are bound to it
I1109 14:28:29.250386    2296 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I1109 14:28:29.261564    2296 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I1109 14:28:29.277341    2296 ssh_runner.go:195] Run: which cri-dockerd
I1109 14:28:29.281794    2296 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I1109 14:28:29.291272    2296 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (190 bytes)
I1109 14:28:29.308148    2296 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I1109 14:28:29.409629    2296 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I1109 14:28:29.499305    2296 docker.go:574] configuring docker to use "cgroupfs" as cgroup driver...
I1109 14:28:29.499377    2296 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (130 bytes)
I1109 14:28:29.515152    2296 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1109 14:28:29.609894    2296 ssh_runner.go:195] Run: sudo systemctl restart docker
I1109 14:28:29.940542    2296 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.socket
I1109 14:28:29.952700    2296 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I1109 14:28:29.963521    2296 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I1109 14:28:30.059818    2296 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I1109 14:28:30.150933    2296 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1109 14:28:30.229617    2296 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I1109 14:28:30.242570    2296 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I1109 14:28:30.253389    2296 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1109 14:28:30.351674    2296 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.service
I1109 14:28:30.416269    2296 start.go:542] Will wait 60s for socket path /var/run/cri-dockerd.sock
I1109 14:28:30.416336    2296 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I1109 14:28:30.419638    2296 start.go:563] Will wait 60s for crictl version
I1109 14:28:30.419678    2296 ssh_runner.go:195] Run: which crictl
I1109 14:28:30.422863    2296 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I1109 14:28:30.452442    2296 start.go:579] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  27.2.0
RuntimeApiVersion:  v1
I1109 14:28:30.452491    2296 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I1109 14:28:30.475351    2296 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I1109 14:28:30.513293    2296 out.go:235] 🐳  Preparing Kubernetes v1.31.0 on Docker 27.2.0 ...
I1109 14:28:30.513571    2296 cli_runner.go:164] Run: docker network inspect demo --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I1109 14:28:30.562429    2296 ssh_runner.go:195] Run: grep 192.168.49.1	host.minikube.internal$ /etc/hosts
I1109 14:28:30.565817    2296 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.49.1	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I1109 14:28:30.576381    2296 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" demo
I1109 14:28:30.632110    2296 kubeadm.go:883] updating cluster {Name:demo KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 Memory:7900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.31.0 ClusterName:demo Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.31.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/zleetch:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} ...
I1109 14:28:30.632211    2296 preload.go:131] Checking if preload exists for k8s version v1.31.0 and runtime docker
I1109 14:28:30.632285    2296 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I1109 14:28:30.652943    2296 docker.go:685] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.31.0
registry.k8s.io/kube-scheduler:v1.31.0
registry.k8s.io/kube-controller-manager:v1.31.0
registry.k8s.io/kube-proxy:v1.31.0
registry.k8s.io/etcd:3.5.15-0
registry.k8s.io/pause:3.10
registry.k8s.io/coredns/coredns:v1.11.1
<none>:<none>
<none>:<none>
<none>:<none>
<none>:<none>
<none>:<none>
<none>:<none>
<none>:<none>
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I1109 14:28:30.652953    2296 docker.go:615] Images already preloaded, skipping extraction
I1109 14:28:30.653054    2296 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I1109 14:28:30.672330    2296 docker.go:685] Got preloaded images: -- stdout --
registry.k8s.io/kube-controller-manager:v1.31.0
registry.k8s.io/kube-scheduler:v1.31.0
registry.k8s.io/kube-apiserver:v1.31.0
registry.k8s.io/kube-proxy:v1.31.0
registry.k8s.io/etcd:3.5.15-0
registry.k8s.io/pause:3.10
registry.k8s.io/coredns/coredns:v1.11.1
<none>:<none>
<none>:<none>
<none>:<none>
<none>:<none>
<none>:<none>
<none>:<none>
<none>:<none>
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I1109 14:28:30.672339    2296 cache_images.go:84] Images are preloaded, skipping loading
I1109 14:28:30.672345    2296 kubeadm.go:934] updating node { 192.168.49.2 8443 v1.31.0 docker true true} ...
I1109 14:28:30.672408    2296 kubeadm.go:946] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.31.0/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --hostname-override=demo --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.31.0 ClusterName:demo Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:}
I1109 14:28:30.672458    2296 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I1109 14:28:30.712939    2296 cni.go:84] Creating CNI manager for ""
I1109 14:28:30.712950    2296 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I1109 14:28:30.712960    2296 kubeadm.go:84] Using pod CIDR: 10.244.0.0/16
I1109 14:28:30.712971    2296 kubeadm.go:181] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.31.0 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:demo NodeName:demo DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[containerRuntimeEndpoint:unix:///var/run/cri-dockerd.sock hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I1109 14:28:30.713045    2296 kubeadm.go:187] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "demo"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.31.0
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
containerRuntimeEndpoint: unix:///var/run/cri-dockerd.sock
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%"
  nodefs.inodesFree: "0%"
  imagefs.available: "0%"
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I1109 14:28:30.713094    2296 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.31.0
I1109 14:28:30.722665    2296 binaries.go:44] Found k8s binaries, skipping transfer
I1109 14:28:30.722748    2296 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I1109 14:28:30.731039    2296 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (303 bytes)
I1109 14:28:30.746952    2296 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I1109 14:28:30.763351    2296 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2146 bytes)
I1109 14:28:30.780647    2296 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I1109 14:28:30.784138    2296 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I1109 14:28:30.794143    2296 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1109 14:28:30.861084    2296 ssh_runner.go:195] Run: sudo systemctl start kubelet
I1109 14:28:30.875150    2296 certs.go:68] Setting up /home/zleetch/.minikube/profiles/demo for IP: 192.168.49.2
I1109 14:28:30.875157    2296 certs.go:194] generating shared ca certs ...
I1109 14:28:30.875170    2296 certs.go:226] acquiring lock for ca certs: {Name:mkeb1e40279603518bfe02b22c99a8b0abdd5249 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1109 14:28:30.875285    2296 certs.go:240] generating "minikubeCA" ca cert: /home/zleetch/.minikube/ca.key
I1109 14:28:30.941985    2296 crypto.go:156] Writing cert to /home/zleetch/.minikube/ca.crt ...
I1109 14:28:30.941998    2296 lock.go:35] WriteFile acquiring /home/zleetch/.minikube/ca.crt: {Name:mk855d4e855b51cfdf4f422ea715ad39f9123536 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1109 14:28:30.942177    2296 crypto.go:164] Writing key to /home/zleetch/.minikube/ca.key ...
I1109 14:28:30.942183    2296 lock.go:35] WriteFile acquiring /home/zleetch/.minikube/ca.key: {Name:mk4b5fd830423527fa96347e17be8e21fa906335 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1109 14:28:30.942294    2296 certs.go:240] generating "proxyClientCA" ca cert: /home/zleetch/.minikube/proxy-client-ca.key
I1109 14:28:31.007364    2296 crypto.go:156] Writing cert to /home/zleetch/.minikube/proxy-client-ca.crt ...
I1109 14:28:31.007375    2296 lock.go:35] WriteFile acquiring /home/zleetch/.minikube/proxy-client-ca.crt: {Name:mkdb58ddbd6127149342f2a79930310ca602e8ca Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1109 14:28:31.007510    2296 crypto.go:164] Writing key to /home/zleetch/.minikube/proxy-client-ca.key ...
I1109 14:28:31.007524    2296 lock.go:35] WriteFile acquiring /home/zleetch/.minikube/proxy-client-ca.key: {Name:mk5713c930783d5c30559633a6a9d5a6c91a09bb Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1109 14:28:31.007617    2296 certs.go:256] generating profile certs ...
I1109 14:28:31.007654    2296 certs.go:363] generating signed profile cert for "minikube-user": /home/zleetch/.minikube/profiles/demo/client.key
I1109 14:28:31.007662    2296 crypto.go:68] Generating cert /home/zleetch/.minikube/profiles/demo/client.crt with IP's: []
I1109 14:28:31.112801    2296 crypto.go:156] Writing cert to /home/zleetch/.minikube/profiles/demo/client.crt ...
I1109 14:28:31.112812    2296 lock.go:35] WriteFile acquiring /home/zleetch/.minikube/profiles/demo/client.crt: {Name:mka9bd809d21dbf8c3802afcd2ccf84b9f1681ed Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1109 14:28:31.112947    2296 crypto.go:164] Writing key to /home/zleetch/.minikube/profiles/demo/client.key ...
I1109 14:28:31.112958    2296 lock.go:35] WriteFile acquiring /home/zleetch/.minikube/profiles/demo/client.key: {Name:mk675025d3687788625bfcea8c7c3d15534841d5 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1109 14:28:31.113013    2296 certs.go:363] generating signed profile cert for "minikube": /home/zleetch/.minikube/profiles/demo/apiserver.key.a47c5ef4
I1109 14:28:31.113025    2296 crypto.go:68] Generating cert /home/zleetch/.minikube/profiles/demo/apiserver.crt.a47c5ef4 with IP's: [10.96.0.1 127.0.0.1 10.0.0.1 192.168.49.2]
I1109 14:28:31.266775    2296 crypto.go:156] Writing cert to /home/zleetch/.minikube/profiles/demo/apiserver.crt.a47c5ef4 ...
I1109 14:28:31.266787    2296 lock.go:35] WriteFile acquiring /home/zleetch/.minikube/profiles/demo/apiserver.crt.a47c5ef4: {Name:mkb44371d582b6cfb26bf284136124202971b656 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1109 14:28:31.266950    2296 crypto.go:164] Writing key to /home/zleetch/.minikube/profiles/demo/apiserver.key.a47c5ef4 ...
I1109 14:28:31.266955    2296 lock.go:35] WriteFile acquiring /home/zleetch/.minikube/profiles/demo/apiserver.key.a47c5ef4: {Name:mk92df95b8cf0b94b4c931bded49eb750fb27d39 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1109 14:28:31.267043    2296 certs.go:381] copying /home/zleetch/.minikube/profiles/demo/apiserver.crt.a47c5ef4 -> /home/zleetch/.minikube/profiles/demo/apiserver.crt
I1109 14:28:31.267135    2296 certs.go:385] copying /home/zleetch/.minikube/profiles/demo/apiserver.key.a47c5ef4 -> /home/zleetch/.minikube/profiles/demo/apiserver.key
I1109 14:28:31.267188    2296 certs.go:363] generating signed profile cert for "aggregator": /home/zleetch/.minikube/profiles/demo/proxy-client.key
I1109 14:28:31.267198    2296 crypto.go:68] Generating cert /home/zleetch/.minikube/profiles/demo/proxy-client.crt with IP's: []
I1109 14:28:31.307724    2296 crypto.go:156] Writing cert to /home/zleetch/.minikube/profiles/demo/proxy-client.crt ...
I1109 14:28:31.307730    2296 lock.go:35] WriteFile acquiring /home/zleetch/.minikube/profiles/demo/proxy-client.crt: {Name:mkbde2f6c31b70e2d95cd9eda5562656a6151687 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1109 14:28:31.307865    2296 crypto.go:164] Writing key to /home/zleetch/.minikube/profiles/demo/proxy-client.key ...
I1109 14:28:31.307870    2296 lock.go:35] WriteFile acquiring /home/zleetch/.minikube/profiles/demo/proxy-client.key: {Name:mkd78cf22a0444c63e5e7c5fdff449ffb9d5df04 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1109 14:28:31.308024    2296 certs.go:484] found cert: /home/zleetch/.minikube/certs/ca-key.pem (1675 bytes)
I1109 14:28:31.308042    2296 certs.go:484] found cert: /home/zleetch/.minikube/certs/ca.pem (1078 bytes)
I1109 14:28:31.308056    2296 certs.go:484] found cert: /home/zleetch/.minikube/certs/cert.pem (1123 bytes)
I1109 14:28:31.308069    2296 certs.go:484] found cert: /home/zleetch/.minikube/certs/key.pem (1675 bytes)
I1109 14:28:31.309478    2296 ssh_runner.go:362] scp /home/zleetch/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I1109 14:28:31.331668    2296 ssh_runner.go:362] scp /home/zleetch/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1679 bytes)
I1109 14:28:31.357043    2296 ssh_runner.go:362] scp /home/zleetch/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I1109 14:28:31.380355    2296 ssh_runner.go:362] scp /home/zleetch/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)
I1109 14:28:31.402263    2296 ssh_runner.go:362] scp /home/zleetch/.minikube/profiles/demo/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1407 bytes)
I1109 14:28:31.424764    2296 ssh_runner.go:362] scp /home/zleetch/.minikube/profiles/demo/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I1109 14:28:31.447077    2296 ssh_runner.go:362] scp /home/zleetch/.minikube/profiles/demo/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I1109 14:28:31.470694    2296 ssh_runner.go:362] scp /home/zleetch/.minikube/profiles/demo/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I1109 14:28:31.493547    2296 ssh_runner.go:362] scp /home/zleetch/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I1109 14:28:31.514077    2296 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I1109 14:28:31.531538    2296 ssh_runner.go:195] Run: openssl version
I1109 14:28:31.536496    2296 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I1109 14:28:31.546326    2296 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I1109 14:28:31.551194    2296 certs.go:528] hashing: -rw-r--r-- 1 root root 1111 Nov  9 07:28 /usr/share/ca-certificates/minikubeCA.pem
I1109 14:28:31.551255    2296 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I1109 14:28:31.557353    2296 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I1109 14:28:31.567317    2296 ssh_runner.go:195] Run: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt
I1109 14:28:31.571215    2296 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-etcd-client.crt -checkend 86400
I1109 14:28:31.578034    2296 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-kubelet-client.crt -checkend 86400
I1109 14:28:31.585871    2296 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/server.crt -checkend 86400
I1109 14:28:31.592266    2296 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/healthcheck-client.crt -checkend 86400
I1109 14:28:31.599058    2296 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/peer.crt -checkend 86400
I1109 14:28:31.605511    2296 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/front-proxy-client.crt -checkend 86400
I1109 14:28:31.611527    2296 kubeadm.go:392] StartCluster: {Name:demo KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 Memory:7900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.31.0 ClusterName:demo Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.31.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/zleetch:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I1109 14:28:31.611695    2296 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I1109 14:28:31.629350    2296 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I1109 14:28:31.638030    2296 kubeadm.go:408] found existing configuration files, will attempt cluster restart
I1109 14:28:31.638037    2296 kubeadm.go:593] restartPrimaryControlPlane start ...
I1109 14:28:31.638077    2296 ssh_runner.go:195] Run: sudo test -d /data/minikube
I1109 14:28:31.647084    2296 kubeadm.go:130] /data/minikube skipping compat symlinks: sudo test -d /data/minikube: Process exited with status 1
stdout:

stderr:
I1109 14:28:31.647160    2296 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" demo
I1109 14:28:31.699002    2296 kubeconfig.go:47] verify endpoint returned: get endpoint: "demo" does not appear in /home/zleetch/.kube/config
I1109 14:28:31.699033    2296 kubeconfig.go:62] /home/zleetch/.kube/config needs updating (will repair): [kubeconfig missing "demo" cluster setting kubeconfig missing "demo" context setting]
I1109 14:28:31.699935    2296 lock.go:35] WriteFile acquiring /home/zleetch/.kube/config: {Name:mke246a677330d3f9874abbed32b6a151c69e863 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1109 14:28:31.711066    2296 ssh_runner.go:195] Run: sudo diff -u /var/tmp/minikube/kubeadm.yaml /var/tmp/minikube/kubeadm.yaml.new
I1109 14:28:31.720608    2296 kubeadm.go:640] detected kubeadm config drift (will reconfigure cluster from new /var/tmp/minikube/kubeadm.yaml):
-- stdout --
--- /var/tmp/minikube/kubeadm.yaml	2024-10-09 11:54:24.051581872 +0000
+++ /var/tmp/minikube/kubeadm.yaml.new	2024-11-09 07:28:30.770803019 +0000
@@ -11,7 +11,7 @@
       - signing
       - authentication
 nodeRegistration:
-  criSocket: /var/run/cri-dockerd.sock
+  criSocket: unix:///var/run/cri-dockerd.sock
   name: "demo"
   kubeletExtraArgs:
     node-ip: 192.168.49.2
@@ -38,7 +38,7 @@
     dataDir: /var/lib/minikube/etcd
     extraArgs:
       proxy-refresh-interval: "70000"
-kubernetesVersion: v1.26.3
+kubernetesVersion: v1.31.0
 networking:
   dnsDomain: cluster.local
   podSubnet: "10.244.0.0/16"
@@ -50,6 +50,7 @@
   x509:
     clientCAFile: /var/lib/minikube/certs/ca.crt
 cgroupDriver: cgroupfs
+containerRuntimeEndpoint: unix:///var/run/cri-dockerd.sock
 hairpinMode: hairpin-veth
 runtimeRequestTimeout: 15m
 clusterDomain: "cluster.local"

-- /stdout --
I1109 14:28:31.720615    2296 kubeadm.go:1160] stopping kube-system containers ...
I1109 14:28:31.720702    2296 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I1109 14:28:31.740402    2296 docker.go:483] Stopping containers: [bd30139339af c4619d5189bb 62962e3e7b34 214978af45e6 20046069c50d 6f3c5bd55f19 888dcd349159 46308ee6f5f9 98c7ca5b6cbb cb2dd5455dda 3be5ee6579b6 a11410135076 a27d52d99a86 19363df5d479 8e9a742512ca]
I1109 14:28:31.740456    2296 ssh_runner.go:195] Run: docker stop bd30139339af c4619d5189bb 62962e3e7b34 214978af45e6 20046069c50d 6f3c5bd55f19 888dcd349159 46308ee6f5f9 98c7ca5b6cbb cb2dd5455dda 3be5ee6579b6 a11410135076 a27d52d99a86 19363df5d479 8e9a742512ca
I1109 14:28:31.759511    2296 ssh_runner.go:195] Run: sudo systemctl stop kubelet
I1109 14:28:31.775890    2296 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I1109 14:28:31.783916    2296 kubeadm.go:155] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I1109 14:28:31.783923    2296 kubeadm.go:157] found existing configuration files:

I1109 14:28:31.783958    2296 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf
I1109 14:28:31.792289    2296 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/admin.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/admin.conf: No such file or directory
I1109 14:28:31.792335    2296 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/admin.conf
I1109 14:28:31.799843    2296 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf
I1109 14:28:31.808255    2296 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/kubelet.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/kubelet.conf: No such file or directory
I1109 14:28:31.808294    2296 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/kubelet.conf
I1109 14:28:31.815831    2296 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf
I1109 14:28:31.824460    2296 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/controller-manager.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/controller-manager.conf: No such file or directory
I1109 14:28:31.824508    2296 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/controller-manager.conf
I1109 14:28:31.832778    2296 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf
I1109 14:28:31.840601    2296 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/scheduler.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/scheduler.conf: No such file or directory
I1109 14:28:31.840652    2296 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/scheduler.conf
I1109 14:28:31.848951    2296 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I1109 14:28:31.857427    2296 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.31.0:$PATH" kubeadm init phase certs all --config /var/tmp/minikube/kubeadm.yaml"
E1109 14:28:31.893730    2296 kubeadm.go:669] sudo env PATH="/var/lib/minikube/binaries/v1.31.0:$PATH" kubeadm init phase certs all --config /var/tmp/minikube/kubeadm.yaml failed - will try once more: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.31.0:$PATH" kubeadm init phase certs all --config /var/tmp/minikube/kubeadm.yaml": Process exited with status 1
stdout:
[certs] Using certificateDir folder "/var/lib/minikube/certs"
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk

stderr:
W1109 07:28:31.887953    2089 common.go:101] your configuration file uses a deprecated API spec: "kubeadm.k8s.io/v1beta3" (kind: "ClusterConfiguration"). Please use 'kubeadm config migrate --old-config old.yaml --new-config new.yaml', which will write the new, similar spec using a newer API version.
W1109 07:28:31.888397    2089 common.go:101] your configuration file uses a deprecated API spec: "kubeadm.k8s.io/v1beta3" (kind: "InitConfiguration"). Please use 'kubeadm config migrate --old-config old.yaml --new-config new.yaml', which will write the new, similar spec using a newer API version.
error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
To see the stack trace of this error execute with --v=5 or higher
I1109 14:28:31.893929    2296 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.31.0:$PATH" kubeadm init phase certs all --config /var/tmp/minikube/kubeadm.yaml"
I1109 14:28:31.930128    2296 kubeadm.go:597] duration metric: took 292.083239ms to restartPrimaryControlPlane
W1109 14:28:31.930201    2296 out.go:270] 🤦  Unable to restart control-plane node(s), will reset cluster: <no value>
I1109 14:28:31.930454    2296 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.31.0:$PATH" kubeadm reset --cri-socket /var/run/cri-dockerd.sock --force"
I1109 14:28:32.128540    2296 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I1109 14:28:32.139298    2296 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I1109 14:28:32.149173    2296 kubeadm.go:214] ignoring SystemVerification for kubeadm because of docker driver
I1109 14:28:32.149213    2296 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I1109 14:28:32.157237    2296 kubeadm.go:155] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I1109 14:28:32.157242    2296 kubeadm.go:157] found existing configuration files:

I1109 14:28:32.157275    2296 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf
I1109 14:28:32.165528    2296 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/admin.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/admin.conf: No such file or directory
I1109 14:28:32.165590    2296 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/admin.conf
I1109 14:28:32.174036    2296 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf
I1109 14:28:32.182801    2296 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/kubelet.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/kubelet.conf: No such file or directory
I1109 14:28:32.182843    2296 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/kubelet.conf
I1109 14:28:32.191363    2296 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf
I1109 14:28:32.199318    2296 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/controller-manager.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/controller-manager.conf: No such file or directory
I1109 14:28:32.199363    2296 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/controller-manager.conf
I1109 14:28:32.207613    2296 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf
I1109 14:28:32.217061    2296 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/scheduler.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/scheduler.conf: No such file or directory
I1109 14:28:32.217103    2296 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/scheduler.conf
I1109 14:28:32.226128    2296 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.31.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I1109 14:28:32.259049    2296 kubeadm.go:310] [init] Using Kubernetes version: v1.31.0
I1109 14:28:32.259078    2296 kubeadm.go:310] [preflight] Running pre-flight checks
I1109 14:28:32.332104    2296 kubeadm.go:310] [preflight] Pulling images required for setting up a Kubernetes cluster
I1109 14:28:32.332195    2296 kubeadm.go:310] [preflight] This might take a minute or two, depending on the speed of your internet connection
I1109 14:28:32.332340    2296 kubeadm.go:310] [preflight] You can also perform this action beforehand using 'kubeadm config images pull'
I1109 14:28:32.342304    2296 kubeadm.go:310] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I1109 14:28:32.357365    2296 out.go:235]     ▪ Generating certificates and keys ...
I1109 14:28:32.357528    2296 kubeadm.go:310] [certs] Using existing ca certificate authority
I1109 14:28:32.357602    2296 kubeadm.go:310] [certs] Using existing apiserver certificate and key on disk
I1109 14:28:32.357756    2296 kubeadm.go:310] W1109 07:28:32.257024    2159 common.go:101] your configuration file uses a deprecated API spec: "kubeadm.k8s.io/v1beta3" (kind: "ClusterConfiguration"). Please use 'kubeadm config migrate --old-config old.yaml --new-config new.yaml', which will write the new, similar spec using a newer API version.
I1109 14:28:32.358089    2296 kubeadm.go:310] W1109 07:28:32.257537    2159 common.go:101] your configuration file uses a deprecated API spec: "kubeadm.k8s.io/v1beta3" (kind: "InitConfiguration"). Please use 'kubeadm config migrate --old-config old.yaml --new-config new.yaml', which will write the new, similar spec using a newer API version.
I1109 14:28:32.358336    2296 kubeadm.go:310] 	[WARNING Swap]: swap is supported for cgroup v2 only. The kubelet must be properly configured to use swap. Please refer to https://kubernetes.io/docs/concepts/architecture/nodes/#swap-memory, or disable swap on the node
I1109 14:28:32.358401    2296 kubeadm.go:310] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I1109 14:28:32.358464    2296 kubeadm.go:310] 	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
I1109 14:28:32.358636    2296 kubeadm.go:310] error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
W1109 14:28:32.358739    2296 out.go:270] 💢  initialization failed, will try again: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.31.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 1
stdout:
[init] Using Kubernetes version: v1.31.0
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/var/lib/minikube/certs"
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk

stderr:
W1109 07:28:32.257024    2159 common.go:101] your configuration file uses a deprecated API spec: "kubeadm.k8s.io/v1beta3" (kind: "ClusterConfiguration"). Please use 'kubeadm config migrate --old-config old.yaml --new-config new.yaml', which will write the new, similar spec using a newer API version.
W1109 07:28:32.257537    2159 common.go:101] your configuration file uses a deprecated API spec: "kubeadm.k8s.io/v1beta3" (kind: "InitConfiguration"). Please use 'kubeadm config migrate --old-config old.yaml --new-config new.yaml', which will write the new, similar spec using a newer API version.
	[WARNING Swap]: swap is supported for cgroup v2 only. The kubelet must be properly configured to use swap. Please refer to https://kubernetes.io/docs/concepts/architecture/nodes/#swap-memory, or disable swap on the node
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
To see the stack trace of this error execute with --v=5 or higher

I1109 14:28:32.358760    2296 kubeadm.go:310] To see the stack trace of this error execute with --v=5 or higher
I1109 14:28:32.358853    2296 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.31.0:$PATH" kubeadm reset --cri-socket /var/run/cri-dockerd.sock --force"
I1109 14:28:32.404111    2296 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I1109 14:28:32.417056    2296 kubeadm.go:214] ignoring SystemVerification for kubeadm because of docker driver
I1109 14:28:32.417127    2296 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I1109 14:28:32.426727    2296 kubeadm.go:155] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I1109 14:28:32.426734    2296 kubeadm.go:157] found existing configuration files:

I1109 14:28:32.426792    2296 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf
I1109 14:28:32.436747    2296 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/admin.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/admin.conf: No such file or directory
I1109 14:28:32.436790    2296 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/admin.conf
I1109 14:28:32.445272    2296 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf
I1109 14:28:32.453324    2296 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/kubelet.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/kubelet.conf: No such file or directory
I1109 14:28:32.453381    2296 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/kubelet.conf
I1109 14:28:32.461964    2296 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf
I1109 14:28:32.470195    2296 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/controller-manager.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/controller-manager.conf: No such file or directory
I1109 14:28:32.470249    2296 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/controller-manager.conf
I1109 14:28:32.478623    2296 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf
I1109 14:28:32.486603    2296 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/scheduler.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/scheduler.conf: No such file or directory
I1109 14:28:32.486646    2296 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/scheduler.conf
I1109 14:28:32.494893    2296 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.31.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I1109 14:28:32.524733    2296 kubeadm.go:310] W1109 07:28:32.524081    2227 common.go:101] your configuration file uses a deprecated API spec: "kubeadm.k8s.io/v1beta3" (kind: "ClusterConfiguration"). Please use 'kubeadm config migrate --old-config old.yaml --new-config new.yaml', which will write the new, similar spec using a newer API version.
I1109 14:28:32.525185    2296 kubeadm.go:310] W1109 07:28:32.524523    2227 common.go:101] your configuration file uses a deprecated API spec: "kubeadm.k8s.io/v1beta3" (kind: "InitConfiguration"). Please use 'kubeadm config migrate --old-config old.yaml --new-config new.yaml', which will write the new, similar spec using a newer API version.
I1109 14:28:32.537397    2296 kubeadm.go:310] 	[WARNING Swap]: swap is supported for cgroup v2 only. The kubelet must be properly configured to use swap. Please refer to https://kubernetes.io/docs/concepts/architecture/nodes/#swap-memory, or disable swap on the node
I1109 14:28:32.596077    2296 kubeadm.go:310] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I1109 14:28:32.596205    2296 kubeadm.go:310] 	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
I1109 14:28:32.607179    2296 kubeadm.go:310] error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
I1109 14:28:32.616492    2296 out.go:235]     ▪ Generating certificates and keys ...
I1109 14:28:32.616617    2296 kubeadm.go:310] To see the stack trace of this error execute with --v=5 or higher
I1109 14:28:32.616641    2296 kubeadm.go:310] [init] Using Kubernetes version: v1.31.0
I1109 14:28:32.616662    2296 kubeadm.go:310] [preflight] Running pre-flight checks
I1109 14:28:32.616699    2296 kubeadm.go:310] [preflight] Pulling images required for setting up a Kubernetes cluster
I1109 14:28:32.616773    2296 kubeadm.go:310] [preflight] This might take a minute or two, depending on the speed of your internet connection
I1109 14:28:32.616893    2296 kubeadm.go:310] [preflight] You can also perform this action beforehand using 'kubeadm config images pull'
I1109 14:28:32.616989    2296 kubeadm.go:310] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I1109 14:28:32.617036    2296 kubeadm.go:310] [certs] Using existing ca certificate authority
I1109 14:28:32.617137    2296 kubeadm.go:310] [certs] Using existing apiserver certificate and key on disk
I1109 14:28:32.617145    2296 kubeadm.go:394] duration metric: took 1.005623797s to StartCluster
I1109 14:28:32.617184    2296 cri.go:54] listing CRI containers in root : {State:all Name:kube-apiserver Namespaces:[]}
I1109 14:28:32.617244    2296 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-apiserver
I1109 14:28:32.649067    2296 cri.go:89] found id: ""
I1109 14:28:32.649079    2296 logs.go:276] 0 containers: []
W1109 14:28:32.649086    2296 logs.go:278] No container was found matching "kube-apiserver"
I1109 14:28:32.649091    2296 cri.go:54] listing CRI containers in root : {State:all Name:etcd Namespaces:[]}
I1109 14:28:32.649150    2296 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=etcd
I1109 14:28:32.678541    2296 cri.go:89] found id: ""
I1109 14:28:32.678551    2296 logs.go:276] 0 containers: []
W1109 14:28:32.678556    2296 logs.go:278] No container was found matching "etcd"
I1109 14:28:32.678560    2296 cri.go:54] listing CRI containers in root : {State:all Name:coredns Namespaces:[]}
I1109 14:28:32.678603    2296 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=coredns
I1109 14:28:32.714615    2296 cri.go:89] found id: ""
I1109 14:28:32.714627    2296 logs.go:276] 0 containers: []
W1109 14:28:32.714638    2296 logs.go:278] No container was found matching "coredns"
I1109 14:28:32.714645    2296 cri.go:54] listing CRI containers in root : {State:all Name:kube-scheduler Namespaces:[]}
I1109 14:28:32.714708    2296 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-scheduler
I1109 14:28:32.745503    2296 cri.go:89] found id: ""
I1109 14:28:32.745514    2296 logs.go:276] 0 containers: []
W1109 14:28:32.745521    2296 logs.go:278] No container was found matching "kube-scheduler"
I1109 14:28:32.745526    2296 cri.go:54] listing CRI containers in root : {State:all Name:kube-proxy Namespaces:[]}
I1109 14:28:32.745586    2296 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-proxy
I1109 14:28:32.778500    2296 cri.go:89] found id: ""
I1109 14:28:32.778512    2296 logs.go:276] 0 containers: []
W1109 14:28:32.778519    2296 logs.go:278] No container was found matching "kube-proxy"
I1109 14:28:32.778525    2296 cri.go:54] listing CRI containers in root : {State:all Name:kube-controller-manager Namespaces:[]}
I1109 14:28:32.778587    2296 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-controller-manager
I1109 14:28:32.809400    2296 cri.go:89] found id: ""
I1109 14:28:32.809409    2296 logs.go:276] 0 containers: []
W1109 14:28:32.809415    2296 logs.go:278] No container was found matching "kube-controller-manager"
I1109 14:28:32.809420    2296 cri.go:54] listing CRI containers in root : {State:all Name:kindnet Namespaces:[]}
I1109 14:28:32.809613    2296 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kindnet
I1109 14:28:32.840772    2296 cri.go:89] found id: ""
I1109 14:28:32.840783    2296 logs.go:276] 0 containers: []
W1109 14:28:32.840790    2296 logs.go:278] No container was found matching "kindnet"
I1109 14:28:32.840798    2296 logs.go:123] Gathering logs for kubelet ...
I1109 14:28:32.840807    2296 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I1109 14:28:32.852986    2296 logs.go:123] Gathering logs for dmesg ...
I1109 14:28:32.852997    2296 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I1109 14:28:32.865920    2296 logs.go:123] Gathering logs for describe nodes ...
I1109 14:28:32.865930    2296 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.31.0/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
W1109 14:28:32.924333    2296 logs.go:130] failed describe nodes: command: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.31.0/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig" /bin/bash -c "sudo /var/lib/minikube/binaries/v1.31.0/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig": Process exited with status 1
stdout:

stderr:
E1109 07:28:32.912626    2355 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://localhost:8443/api?timeout=32s\": dial tcp [::1]:8443: connect: connection refused"
E1109 07:28:32.914326    2355 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://localhost:8443/api?timeout=32s\": dial tcp [::1]:8443: connect: connection refused"
E1109 07:28:32.915950    2355 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://localhost:8443/api?timeout=32s\": dial tcp [::1]:8443: connect: connection refused"
E1109 07:28:32.917800    2355 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://localhost:8443/api?timeout=32s\": dial tcp [::1]:8443: connect: connection refused"
E1109 07:28:32.919667    2355 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://localhost:8443/api?timeout=32s\": dial tcp [::1]:8443: connect: connection refused"
The connection to the server localhost:8443 was refused - did you specify the right host or port?
 output: 
** stderr ** 
E1109 07:28:32.912626    2355 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://localhost:8443/api?timeout=32s\": dial tcp [::1]:8443: connect: connection refused"
E1109 07:28:32.914326    2355 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://localhost:8443/api?timeout=32s\": dial tcp [::1]:8443: connect: connection refused"
E1109 07:28:32.915950    2355 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://localhost:8443/api?timeout=32s\": dial tcp [::1]:8443: connect: connection refused"
E1109 07:28:32.917800    2355 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://localhost:8443/api?timeout=32s\": dial tcp [::1]:8443: connect: connection refused"
E1109 07:28:32.919667    2355 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://localhost:8443/api?timeout=32s\": dial tcp [::1]:8443: connect: connection refused"
The connection to the server localhost:8443 was refused - did you specify the right host or port?

** /stderr **
I1109 14:28:32.924344    2296 logs.go:123] Gathering logs for Docker ...
I1109 14:28:32.924351    2296 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I1109 14:28:32.944985    2296 logs.go:123] Gathering logs for container status ...
I1109 14:28:32.944996    2296 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
W1109 14:28:32.977908    2296 out.go:418] Error starting cluster: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.31.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 1
stdout:
[init] Using Kubernetes version: v1.31.0
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/var/lib/minikube/certs"
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk

stderr:
W1109 07:28:32.524081    2227 common.go:101] your configuration file uses a deprecated API spec: "kubeadm.k8s.io/v1beta3" (kind: "ClusterConfiguration"). Please use 'kubeadm config migrate --old-config old.yaml --new-config new.yaml', which will write the new, similar spec using a newer API version.
W1109 07:28:32.524523    2227 common.go:101] your configuration file uses a deprecated API spec: "kubeadm.k8s.io/v1beta3" (kind: "InitConfiguration"). Please use 'kubeadm config migrate --old-config old.yaml --new-config new.yaml', which will write the new, similar spec using a newer API version.
	[WARNING Swap]: swap is supported for cgroup v2 only. The kubelet must be properly configured to use swap. Please refer to https://kubernetes.io/docs/concepts/architecture/nodes/#swap-memory, or disable swap on the node
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
To see the stack trace of this error execute with --v=5 or higher
W1109 14:28:32.977961    2296 out.go:270] 
W1109 14:28:32.978120    2296 out.go:270] 💣  Error starting cluster: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.31.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 1
stdout:
[init] Using Kubernetes version: v1.31.0
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/var/lib/minikube/certs"
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk

stderr:
W1109 07:28:32.524081    2227 common.go:101] your configuration file uses a deprecated API spec: "kubeadm.k8s.io/v1beta3" (kind: "ClusterConfiguration"). Please use 'kubeadm config migrate --old-config old.yaml --new-config new.yaml', which will write the new, similar spec using a newer API version.
W1109 07:28:32.524523    2227 common.go:101] your configuration file uses a deprecated API spec: "kubeadm.k8s.io/v1beta3" (kind: "InitConfiguration"). Please use 'kubeadm config migrate --old-config old.yaml --new-config new.yaml', which will write the new, similar spec using a newer API version.
	[WARNING Swap]: swap is supported for cgroup v2 only. The kubelet must be properly configured to use swap. Please refer to https://kubernetes.io/docs/concepts/architecture/nodes/#swap-memory, or disable swap on the node
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
To see the stack trace of this error execute with --v=5 or higher

W1109 14:28:32.978247    2296 out.go:270] 
W1109 14:28:32.979101    2296 out.go:293] [31m╭───────────────────────────────────────────────────────────────────────────────────────────╮[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    😿  If the above advice does not help, please let us know:                             [31m│[0m
[31m│[0m    👉  https://github.com/kubernetes/minikube/issues/new/choose                           [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m╰───────────────────────────────────────────────────────────────────────────────────────────╯[0m
I1109 14:28:32.993549    2296 out.go:201] 
W1109 14:28:33.003021    2296 out.go:270] ❌  Exiting due to GUEST_START: failed to start node: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.31.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 1
stdout:
[init] Using Kubernetes version: v1.31.0
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/var/lib/minikube/certs"
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk

stderr:
W1109 07:28:32.524081    2227 common.go:101] your configuration file uses a deprecated API spec: "kubeadm.k8s.io/v1beta3" (kind: "ClusterConfiguration"). Please use 'kubeadm config migrate --old-config old.yaml --new-config new.yaml', which will write the new, similar spec using a newer API version.
W1109 07:28:32.524523    2227 common.go:101] your configuration file uses a deprecated API spec: "kubeadm.k8s.io/v1beta3" (kind: "InitConfiguration"). Please use 'kubeadm config migrate --old-config old.yaml --new-config new.yaml', which will write the new, similar spec using a newer API version.
	[WARNING Swap]: swap is supported for cgroup v2 only. The kubelet must be properly configured to use swap. Please refer to https://kubernetes.io/docs/concepts/architecture/nodes/#swap-memory, or disable swap on the node
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
To see the stack trace of this error execute with --v=5 or higher

W1109 14:28:33.003077    2296 out.go:270] 
W1109 14:28:33.003679    2296 out.go:293] [31m╭───────────────────────────────────────────────────────────────────────────────────────────╮[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    😿  If the above advice does not help, please let us know:                             [31m│[0m
[31m│[0m    👉  https://github.com/kubernetes/minikube/issues/new/choose                           [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m╰───────────────────────────────────────────────────────────────────────────────────────────╯[0m
I1109 14:28:33.013139    2296 out.go:201] 


